-- MySQL Script generated by MySQL Workbench
-- Wed Oct 25 15:13:33 2017
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema SisInf
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `SisInf` DEFAULT CHARACTER SET utf8 ;
USE `SisInf` ;

-- -----------------------------------------------------
-- Table `SisInf`.`user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `SisInf`.`user` (
  `u_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`u_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `SisInf`.`registered_user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `SisInf`.`registered_user` (
  `u_id` INT UNSIGNED NOT NULL,
  `login` VARCHAR(255) NOT NULL,
  `email` VARCHAR(255) NOT NULL,
  `password` VARCHAR(255) NOT NULL,
  `dob` DATE NOT NULL,
  `name` VARCHAR(255) NOT NULL,
  `surname` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`u_id`),
  UNIQUE INDEX `email_UNIQUE` (`email` ASC),
  CONSTRAINT `user-registered_user`
    FOREIGN KEY (`u_id`)
    REFERENCES `SisInf`.`user` (`u_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `SisInf`.`user_activity`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `SisInf`.`user_activity` (
  `ua_id` INT UNSIGNED NOT NULL,
  `u_id` INT UNSIGNED NOT NULL,
  `date` DATETIME NOT NULL DEFAULT NOW(),
  `description` TEXT NOT NULL,
  PRIMARY KEY (`ua_id`, `u_id`),
  INDEX `u_id_idx` (`u_id` ASC),
  CONSTRAINT `logs`
    FOREIGN KEY (`u_id`)
    REFERENCES `SisInf`.`registered_user` (`u_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `SisInf`.`product`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `SisInf`.`product` (
  `p_id` INT UNSIGNED NOT NULL,
  `name` VARCHAR(255) NOT NULL,
  `description` TEXT NULL,
  `price` FLOAT(9,2) NOT NULL,
  `picture` VARCHAR(2000) NULL,
  PRIMARY KEY (`p_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `SisInf`.`product_activity`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `SisInf`.`product_activity` (
  `pa_id` INT UNSIGNED NOT NULL,
  `p_id` INT UNSIGNED NOT NULL,
  `u_id` INT UNSIGNED NOT NULL,
  `date` DATETIME NOT NULL DEFAULT NOW(),
  PRIMARY KEY (`pa_id`, `p_id`, `u_id`),
  INDEX `p_id_idx` (`p_id` ASC),
  INDEX `u_id_idx` (`u_id` ASC),
  CONSTRAINT `AffectedBy`
    FOREIGN KEY (`p_id`)
    REFERENCES `SisInf`.`product` (`p_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `Does`
    FOREIGN KEY (`u_id`)
    REFERENCES `SisInf`.`user` (`u_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `SisInf`.`rating`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `SisInf`.`rating` (
  `pa_id` INT UNSIGNED NOT NULL,
  `rating` ENUM('1', '2', '3', '4', '5') NOT NULL DEFAULT '3',
  `comment` TEXT NULL,
  PRIMARY KEY (`pa_id`),
  CONSTRAINT `product_activity-rating`
    FOREIGN KEY (`pa_id`)
    REFERENCES `SisInf`.`product_activity` (`pa_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `SisInf`.`purchase`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `SisInf`.`purchase` (
  `pa_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`pa_id`),
  CONSTRAINT `product_activity-purchase`
    FOREIGN KEY (`pa_id`)
    REFERENCES `SisInf`.`product_activity` (`pa_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

/* -Total-
 * PRODUCT_ACTIVITYx: PRODUCT_ACTIVITY, RATINGx: RATING, PURCHASEx: PURCHASE
 * FOR EVERY PRODUCT_ACTIVITYx(PRODUCT_ACTIVITY(PRODUCT_ACTIVITYx) -> (EXISTS RATINGx(RATING(RATINGx)
 *  AND RATINGx.pa_id = PRODUCT_ACTIVITYx.pa_id)
 *  OR EXISTS PURCHASEx(PURCHASE(PURCHASEx) AND PURCHASEx.pa_id = USERx.pa_id)))
 * 
 * -Disjoint-
 * RATINGx: RATING, PURCHASEx: PURCHASE
 * Â¬EXISTS (EXISTS RATINGx EXISTS PURCHASEx (RATING(RATINGx) AND PURCHASE(PURCHASEx) AND
 * (RATINGx.pa_id = PURCHASEx.pa_id)))
 */

-- -----------------------------------------------------
-- Table `SisInf`.`feature`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `SisInf`.`feature` (
  `f_id` SMALLINT UNSIGNED NOT NULL,
  `p_id` INT UNSIGNED NOT NULL,
  `name` VARCHAR(255) NOT NULL,
  `description` TEXT NULL,
  `picture` VARCHAR(2000) NULL,
  PRIMARY KEY (`f_id`, `p_id`),
  INDEX `p_id_idx` (`p_id` ASC),
  CONSTRAINT `Has`
    FOREIGN KEY (`p_id`)
    REFERENCES `SisInf`.`product` (`p_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
